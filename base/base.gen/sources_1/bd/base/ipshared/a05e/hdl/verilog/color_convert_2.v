// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_convert_2_color_convert_2,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-i,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.205000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2058,HLS_SYN_LUT=2892,HLS_VERSION=2020_2}" *)

module color_convert_2 (
        ap_clk,
        ap_rst_n,
        stream_in_48_TDATA,
        stream_in_48_TVALID,
        stream_in_48_TREADY,
        stream_in_48_TKEEP,
        stream_in_48_TSTRB,
        stream_in_48_TUSER,
        stream_in_48_TLAST,
        stream_out_48_TDATA,
        stream_out_48_TVALID,
        stream_out_48_TREADY,
        stream_out_48_TKEEP,
        stream_out_48_TSTRB,
        stream_out_48_TUSER,
        stream_out_48_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [47:0] stream_in_48_TDATA;
input   stream_in_48_TVALID;
output   stream_in_48_TREADY;
input  [5:0] stream_in_48_TKEEP;
input  [5:0] stream_in_48_TSTRB;
input  [0:0] stream_in_48_TUSER;
input  [0:0] stream_in_48_TLAST;
output  [47:0] stream_out_48_TDATA;
output   stream_out_48_TVALID;
input   stream_out_48_TREADY;
output  [5:0] stream_out_48_TKEEP;
output  [5:0] stream_out_48_TSTRB;
output  [0:0] stream_out_48_TUSER;
output  [0:0] stream_out_48_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire   [9:0] c1_c1;
reg   [9:0] c1_c1_0_data_reg;
reg    c1_c1_0_vld_reg;
reg    c1_c1_0_ack_out;
wire   [9:0] c1_c2;
reg   [9:0] c1_c2_0_data_reg;
reg    c1_c2_0_vld_reg;
reg    c1_c2_0_ack_out;
wire   [9:0] c1_c3;
reg   [9:0] c1_c3_0_data_reg;
reg    c1_c3_0_vld_reg;
reg    c1_c3_0_ack_out;
wire   [9:0] c2_c1;
reg   [9:0] c2_c1_0_data_reg;
reg    c2_c1_0_vld_reg;
reg    c2_c1_0_ack_out;
wire   [9:0] c2_c2;
reg   [9:0] c2_c2_0_data_reg;
reg    c2_c2_0_vld_reg;
reg    c2_c2_0_ack_out;
wire   [9:0] c2_c3;
reg   [9:0] c2_c3_0_data_reg;
reg    c2_c3_0_vld_reg;
reg    c2_c3_0_ack_out;
wire   [9:0] c3_c1;
reg   [9:0] c3_c1_0_data_reg;
reg    c3_c1_0_vld_reg;
reg    c3_c1_0_ack_out;
wire   [9:0] c3_c2;
reg   [9:0] c3_c2_0_data_reg;
reg    c3_c2_0_vld_reg;
reg    c3_c2_0_ack_out;
wire   [9:0] c3_c3;
reg   [9:0] c3_c3_0_data_reg;
reg    c3_c3_0_vld_reg;
reg    c3_c3_0_ack_out;
wire   [9:0] bias_c1;
reg   [9:0] bias_c1_0_data_reg;
reg    bias_c1_0_vld_reg;
reg    bias_c1_0_ack_out;
wire   [9:0] bias_c2;
reg   [9:0] bias_c2_0_data_reg;
reg    bias_c2_0_vld_reg;
reg    bias_c2_0_ack_out;
wire   [9:0] bias_c3;
reg   [9:0] bias_c3_0_data_reg;
reg    bias_c3_0_vld_reg;
reg    bias_c3_0_ack_out;
reg    stream_in_48_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    stream_out_48_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [5:0] tmp_i1_keep_reg_1893;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state5_pp0_stage0_iter4;
wire    regslice_both_stream_out_48_V_data_V_U_apdone_blk;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] tmp_i1_keep_reg_1893_pp0_iter1_reg;
reg   [5:0] tmp_i1_keep_reg_1893_pp0_iter2_reg;
reg   [5:0] tmp_i1_keep_reg_1893_pp0_iter3_reg;
reg   [5:0] tmp_i1_strb_reg_1898;
reg   [5:0] tmp_i1_strb_reg_1898_pp0_iter1_reg;
reg   [5:0] tmp_i1_strb_reg_1898_pp0_iter2_reg;
reg   [5:0] tmp_i1_strb_reg_1898_pp0_iter3_reg;
reg   [0:0] tmp_i1_user_reg_1903;
reg   [0:0] tmp_i1_user_reg_1903_pp0_iter1_reg;
reg   [0:0] tmp_i1_user_reg_1903_pp0_iter2_reg;
reg   [0:0] tmp_i1_user_reg_1903_pp0_iter3_reg;
reg   [0:0] tmp_i1_last_reg_1908;
reg   [0:0] tmp_i1_last_reg_1908_pp0_iter1_reg;
reg   [0:0] tmp_i1_last_reg_1908_pp0_iter2_reg;
reg   [0:0] tmp_i1_last_reg_1908_pp0_iter3_reg;
wire   [7:0] v_p1_V_fu_283_p1;
reg   [7:0] v_p1_V_reg_1913;
reg   [7:0] v_p1_V_reg_1913_pp0_iter1_reg;
reg   [7:0] v_p2_V_reg_1918;
reg   [7:0] v_p2_V_reg_1918_pp0_iter1_reg;
reg   [7:0] v_p3_V_reg_1923;
reg   [7:0] v_p3_V_reg_1923_pp0_iter1_reg;
reg   [7:0] v_p4_V_reg_1928;
reg   [7:0] v_p4_V_reg_1928_pp0_iter1_reg;
reg   [7:0] v_p5_V_reg_1933;
reg   [7:0] v_p5_V_reg_1933_pp0_iter1_reg;
reg   [7:0] v_p6_V_reg_1938;
reg   [7:0] v_p6_V_reg_1938_pp0_iter1_reg;
reg   [9:0] c1_c1_read_reg_1943;
reg   [9:0] c1_c2_read_reg_1948;
reg   [9:0] c1_c3_read_reg_1953;
reg   [9:0] rhs_2_reg_1958;
reg   [9:0] rhs_2_reg_1958_pp0_iter2_reg;
reg   [9:0] rhs_2_reg_1958_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_3_fu_337_p1;
reg   [7:0] trunc_ln1192_3_reg_1963;
reg   [7:0] trunc_ln1192_3_reg_1963_pp0_iter2_reg;
reg   [9:0] c2_c1_read_reg_1968;
reg   [9:0] c2_c2_read_reg_1973;
reg   [9:0] c2_c3_read_reg_1978;
reg   [9:0] rhs_6_reg_1983;
reg   [9:0] rhs_6_reg_1983_pp0_iter2_reg;
reg   [9:0] rhs_6_reg_1983_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_8_fu_341_p1;
reg   [7:0] trunc_ln1192_8_reg_1988;
reg   [7:0] trunc_ln1192_8_reg_1988_pp0_iter2_reg;
reg   [9:0] c3_c1_read_reg_1993;
reg   [9:0] c3_c2_read_reg_1998;
reg   [9:0] c3_c3_read_reg_2003;
reg   [9:0] rhs_10_reg_2008;
reg   [9:0] rhs_10_reg_2008_pp0_iter2_reg;
reg   [9:0] rhs_10_reg_2008_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_14_fu_345_p1;
reg   [7:0] trunc_ln1192_14_reg_2013;
reg   [7:0] trunc_ln1192_14_reg_2013_pp0_iter2_reg;
wire  signed [17:0] r_V_fu_355_p2;
reg  signed [17:0] r_V_reg_2018;
wire   [15:0] trunc_ln1115_fu_361_p1;
reg   [15:0] trunc_ln1115_reg_2023;
wire  signed [17:0] r_V_7_fu_371_p2;
reg  signed [17:0] r_V_7_reg_2028;
wire   [15:0] trunc_ln1115_1_fu_377_p1;
reg   [15:0] trunc_ln1115_1_reg_2033;
wire  signed [17:0] r_V_8_fu_387_p2;
reg  signed [17:0] r_V_8_reg_2038;
reg  signed [17:0] r_V_8_reg_2038_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_fu_393_p1;
reg   [7:0] trunc_ln1192_reg_2043;
wire   [15:0] trunc_ln1192_2_fu_397_p1;
reg   [15:0] trunc_ln1192_2_reg_2048;
wire  signed [17:0] r_V_9_fu_404_p2;
reg  signed [17:0] r_V_9_reg_2053;
wire   [15:0] trunc_ln1115_2_fu_410_p1;
reg   [15:0] trunc_ln1115_2_reg_2058;
wire  signed [17:0] r_V_10_fu_417_p2;
reg  signed [17:0] r_V_10_reg_2063;
wire   [15:0] trunc_ln1115_3_fu_423_p1;
reg   [15:0] trunc_ln1115_3_reg_2068;
wire  signed [17:0] r_V_11_fu_430_p2;
reg  signed [17:0] r_V_11_reg_2073;
reg  signed [17:0] r_V_11_reg_2073_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_5_fu_436_p1;
reg   [7:0] trunc_ln1192_5_reg_2078;
wire   [15:0] trunc_ln1192_7_fu_440_p1;
reg   [15:0] trunc_ln1192_7_reg_2083;
wire  signed [17:0] r_V_12_fu_447_p2;
reg  signed [17:0] r_V_12_reg_2088;
wire   [15:0] trunc_ln1115_4_fu_453_p1;
reg   [15:0] trunc_ln1115_4_reg_2093;
wire  signed [17:0] r_V_13_fu_460_p2;
reg  signed [17:0] r_V_13_reg_2098;
wire   [15:0] trunc_ln1115_5_fu_466_p1;
reg   [15:0] trunc_ln1115_5_reg_2103;
wire  signed [17:0] r_V_14_fu_473_p2;
reg  signed [17:0] r_V_14_reg_2108;
reg  signed [17:0] r_V_14_reg_2108_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_10_fu_479_p1;
reg   [7:0] trunc_ln1192_10_reg_2113;
wire   [15:0] trunc_ln1192_12_fu_483_p1;
reg   [15:0] trunc_ln1192_12_reg_2118;
wire  signed [17:0] r_V_15_fu_490_p2;
reg  signed [17:0] r_V_15_reg_2123;
wire   [15:0] trunc_ln1115_6_fu_496_p1;
reg   [15:0] trunc_ln1115_6_reg_2128;
wire  signed [17:0] r_V_16_fu_503_p2;
reg  signed [17:0] r_V_16_reg_2133;
wire   [15:0] trunc_ln1115_7_fu_509_p1;
reg   [15:0] trunc_ln1115_7_reg_2138;
wire  signed [17:0] r_V_17_fu_516_p2;
reg  signed [17:0] r_V_17_reg_2143;
reg  signed [17:0] r_V_17_reg_2143_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_15_fu_522_p1;
reg   [7:0] trunc_ln1192_15_reg_2148;
wire   [15:0] trunc_ln1192_17_fu_526_p1;
reg   [15:0] trunc_ln1192_17_reg_2153;
wire  signed [17:0] r_V_18_fu_530_p2;
reg  signed [17:0] r_V_18_reg_2158;
wire   [15:0] trunc_ln1115_8_fu_536_p1;
reg   [15:0] trunc_ln1115_8_reg_2163;
wire  signed [17:0] r_V_19_fu_540_p2;
reg  signed [17:0] r_V_19_reg_2168;
wire   [15:0] trunc_ln1115_9_fu_546_p1;
reg   [15:0] trunc_ln1115_9_reg_2173;
wire  signed [17:0] r_V_20_fu_550_p2;
reg  signed [17:0] r_V_20_reg_2178;
reg  signed [17:0] r_V_20_reg_2178_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_18_fu_556_p1;
reg   [7:0] trunc_ln1192_18_reg_2183;
wire   [15:0] trunc_ln1192_20_fu_560_p1;
reg   [15:0] trunc_ln1192_20_reg_2188;
wire  signed [17:0] r_V_21_fu_564_p2;
reg  signed [17:0] r_V_21_reg_2193;
wire   [15:0] trunc_ln1115_10_fu_570_p1;
reg   [15:0] trunc_ln1115_10_reg_2198;
wire  signed [17:0] r_V_22_fu_574_p2;
reg  signed [17:0] r_V_22_reg_2203;
wire   [15:0] trunc_ln1115_11_fu_580_p1;
reg   [15:0] trunc_ln1115_11_reg_2208;
wire  signed [17:0] r_V_23_fu_584_p2;
reg  signed [17:0] r_V_23_reg_2213;
reg  signed [17:0] r_V_23_reg_2213_pp0_iter3_reg;
wire   [7:0] trunc_ln1192_21_fu_590_p1;
reg   [7:0] trunc_ln1192_21_reg_2218;
wire   [15:0] trunc_ln1192_23_fu_594_p1;
reg   [15:0] trunc_ln1192_23_reg_2223;
wire   [18:0] ret_V_fu_608_p2;
reg   [18:0] ret_V_reg_2228;
reg   [7:0] p_Val2_2_reg_2233;
reg   [0:0] p_Result_1_reg_2238;
reg   [0:0] tmp_8_reg_2244;
reg   [6:0] trunc_ln415_6_reg_2250;
wire   [18:0] ret_V_3_fu_687_p2;
reg   [18:0] ret_V_3_reg_2255;
reg   [7:0] p_Val2_5_reg_2260;
reg   [0:0] p_Result_3_reg_2265;
reg   [0:0] tmp_12_reg_2271;
reg   [6:0] trunc_ln415_7_reg_2277;
wire   [18:0] ret_V_6_fu_766_p2;
reg   [18:0] ret_V_6_reg_2282;
reg   [7:0] p_Val2_8_reg_2287;
reg   [0:0] p_Result_5_reg_2292;
reg   [0:0] tmp_16_reg_2298;
reg   [6:0] trunc_ln415_8_reg_2304;
wire   [18:0] ret_V_9_fu_845_p2;
reg   [18:0] ret_V_9_reg_2309;
reg   [7:0] p_Val2_11_reg_2314;
reg   [0:0] p_Result_7_reg_2319;
reg   [0:0] tmp_20_reg_2325;
reg   [6:0] trunc_ln415_9_reg_2331;
wire   [18:0] ret_V_12_fu_917_p2;
reg   [18:0] ret_V_12_reg_2336;
reg   [7:0] p_Val2_14_reg_2341;
reg   [0:0] p_Result_9_reg_2346;
reg   [0:0] tmp_24_reg_2352;
reg   [6:0] trunc_ln415_s_reg_2358;
wire   [18:0] ret_V_15_fu_989_p2;
reg   [18:0] ret_V_15_reg_2363;
reg   [7:0] p_Val2_17_reg_2368;
reg   [0:0] p_Result_11_reg_2373;
reg   [0:0] tmp_28_reg_2379;
reg   [6:0] trunc_ln415_1_reg_2385;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_01001;
wire  signed [9:0] r_V_fu_355_p0;
wire  signed [17:0] sext_ln1118_fu_352_p1;
wire   [7:0] r_V_fu_355_p1;
wire   [17:0] zext_ln1118_fu_349_p1;
wire  signed [9:0] r_V_7_fu_371_p0;
wire  signed [17:0] sext_ln1118_1_fu_368_p1;
wire   [7:0] r_V_7_fu_371_p1;
wire   [17:0] zext_ln1118_1_fu_365_p1;
wire  signed [9:0] r_V_8_fu_387_p0;
wire  signed [17:0] sext_ln1118_2_fu_384_p1;
wire   [7:0] r_V_8_fu_387_p1;
wire   [17:0] zext_ln1118_2_fu_381_p1;
wire  signed [9:0] r_V_9_fu_404_p0;
wire  signed [17:0] sext_ln1118_3_fu_401_p1;
wire   [7:0] r_V_9_fu_404_p1;
wire  signed [9:0] r_V_10_fu_417_p0;
wire  signed [17:0] sext_ln1118_4_fu_414_p1;
wire   [7:0] r_V_10_fu_417_p1;
wire  signed [9:0] r_V_11_fu_430_p0;
wire  signed [17:0] sext_ln1118_5_fu_427_p1;
wire   [7:0] r_V_11_fu_430_p1;
wire  signed [9:0] r_V_12_fu_447_p0;
wire  signed [17:0] sext_ln1118_6_fu_444_p1;
wire   [7:0] r_V_12_fu_447_p1;
wire  signed [9:0] r_V_13_fu_460_p0;
wire  signed [17:0] sext_ln1118_7_fu_457_p1;
wire   [7:0] r_V_13_fu_460_p1;
wire  signed [9:0] r_V_14_fu_473_p0;
wire  signed [17:0] sext_ln1118_8_fu_470_p1;
wire   [7:0] r_V_14_fu_473_p1;
wire  signed [9:0] r_V_15_fu_490_p0;
wire   [7:0] r_V_15_fu_490_p1;
wire   [17:0] zext_ln1118_3_fu_487_p1;
wire  signed [9:0] r_V_16_fu_503_p0;
wire   [7:0] r_V_16_fu_503_p1;
wire   [17:0] zext_ln1118_4_fu_500_p1;
wire  signed [9:0] r_V_17_fu_516_p0;
wire   [7:0] r_V_17_fu_516_p1;
wire   [17:0] zext_ln1118_5_fu_513_p1;
wire  signed [9:0] r_V_18_fu_530_p0;
wire   [7:0] r_V_18_fu_530_p1;
wire  signed [9:0] r_V_19_fu_540_p0;
wire   [7:0] r_V_19_fu_540_p1;
wire  signed [9:0] r_V_20_fu_550_p0;
wire   [7:0] r_V_20_fu_550_p1;
wire  signed [9:0] r_V_21_fu_564_p0;
wire   [7:0] r_V_21_fu_564_p1;
wire  signed [9:0] r_V_22_fu_574_p0;
wire   [7:0] r_V_22_fu_574_p1;
wire  signed [9:0] r_V_23_fu_584_p0;
wire   [7:0] r_V_23_fu_584_p1;
wire  signed [18:0] sext_ln703_1_fu_601_p1;
wire  signed [18:0] sext_ln703_fu_598_p1;
wire   [15:0] add_ln1192_1_fu_604_p2;
wire   [7:0] trunc_ln1192_1_fu_614_p1;
wire   [15:0] trunc_ln1192_4_fu_623_p3;
wire   [15:0] add_ln1192_fu_618_p2;
wire   [15:0] add_ln1192_3_fu_635_p2;
wire   [7:0] add_ln1192_2_fu_630_p2;
wire  signed [18:0] sext_ln703_5_fu_680_p1;
wire  signed [18:0] sext_ln703_4_fu_677_p1;
wire   [15:0] add_ln1192_10_fu_683_p2;
wire   [7:0] trunc_ln1192_6_fu_693_p1;
wire   [15:0] trunc_ln1192_9_fu_702_p3;
wire   [15:0] add_ln1192_6_fu_697_p2;
wire   [15:0] add_ln1192_9_fu_714_p2;
wire   [7:0] add_ln1192_8_fu_709_p2;
wire  signed [18:0] sext_ln703_9_fu_759_p1;
wire  signed [18:0] sext_ln703_8_fu_756_p1;
wire   [15:0] add_ln1192_17_fu_762_p2;
wire   [7:0] trunc_ln1192_11_fu_772_p1;
wire   [15:0] trunc_ln1192_s_fu_781_p3;
wire   [15:0] add_ln1192_12_fu_776_p2;
wire   [15:0] add_ln1192_15_fu_793_p2;
wire   [7:0] add_ln1192_14_fu_788_p2;
wire  signed [18:0] sext_ln703_13_fu_838_p1;
wire  signed [18:0] sext_ln703_12_fu_835_p1;
wire   [15:0] add_ln1192_25_fu_841_p2;
wire   [7:0] trunc_ln1192_16_fu_851_p1;
wire   [15:0] add_ln1192_18_fu_855_p2;
wire   [15:0] add_ln1192_21_fu_865_p2;
wire   [7:0] add_ln1192_20_fu_860_p2;
wire  signed [18:0] sext_ln703_17_fu_910_p1;
wire  signed [18:0] sext_ln703_16_fu_907_p1;
wire   [15:0] add_ln1192_34_fu_913_p2;
wire   [7:0] trunc_ln1192_19_fu_923_p1;
wire   [15:0] add_ln1192_24_fu_927_p2;
wire   [15:0] add_ln1192_27_fu_937_p2;
wire   [7:0] add_ln1192_26_fu_932_p2;
wire  signed [18:0] sext_ln703_21_fu_982_p1;
wire  signed [18:0] sext_ln703_20_fu_979_p1;
wire   [15:0] add_ln1192_38_fu_985_p2;
wire   [7:0] trunc_ln1192_22_fu_995_p1;
wire   [15:0] add_ln1192_30_fu_999_p2;
wire   [15:0] add_ln1192_33_fu_1009_p2;
wire   [7:0] add_ln1192_32_fu_1004_p2;
wire  signed [19:0] sext_ln703_2_fu_1051_p1;
wire  signed [19:0] sext_ln703_3_fu_1054_p1;
wire   [17:0] rhs_3_fu_1063_p3;
wire  signed [19:0] sext_ln1192_fu_1070_p1;
wire   [19:0] ret_V_1_fu_1057_p2;
wire   [19:0] ret_V_2_fu_1074_p2;
wire   [7:0] zext_ln415_fu_1088_p1;
wire   [6:0] zext_ln415_1_fu_1091_p1;
wire   [7:0] p_Val2_3_fu_1094_p2;
wire   [0:0] tmp_9_fu_1104_p3;
wire   [3:0] tmp_1_fu_1118_p4;
wire   [0:0] Range1_all_zeros_fu_1134_p2;
wire   [0:0] Range1_all_ones_fu_1128_p2;
wire   [0:0] select_ln778_fu_1140_p3;
wire   [0:0] carry_1_fu_1112_p2;
wire   [0:0] and_ln781_6_fu_1155_p2;
wire   [0:0] and_ln781_fu_1161_p2;
wire   [6:0] add_ln416_fu_1099_p2;
wire   [6:0] select_ln396_fu_1166_p3;
wire   [0:0] deleted_zeros_fu_1148_p3;
wire   [0:0] p_Result_s_fu_1080_p3;
wire   [7:0] zext_ln394_fu_1174_p1;
wire   [7:0] select_ln394_fu_1178_p3;
wire  signed [19:0] sext_ln703_6_fu_1194_p1;
wire  signed [19:0] sext_ln703_7_fu_1197_p1;
wire   [17:0] rhs_7_fu_1206_p3;
wire  signed [19:0] sext_ln1192_1_fu_1213_p1;
wire   [19:0] ret_V_4_fu_1200_p2;
wire   [19:0] ret_V_5_fu_1217_p2;
wire   [7:0] zext_ln415_2_fu_1231_p1;
wire   [6:0] zext_ln415_3_fu_1234_p1;
wire   [7:0] p_Val2_6_fu_1237_p2;
wire   [0:0] tmp_13_fu_1247_p3;
wire   [3:0] tmp_fu_1261_p4;
wire   [0:0] Range1_all_zeros_1_fu_1277_p2;
wire   [0:0] Range1_all_ones_1_fu_1271_p2;
wire   [0:0] select_ln778_1_fu_1283_p3;
wire   [0:0] carry_3_fu_1255_p2;
wire   [0:0] and_ln781_7_fu_1298_p2;
wire   [0:0] and_ln781_1_fu_1304_p2;
wire   [6:0] add_ln416_1_fu_1242_p2;
wire   [6:0] select_ln396_1_fu_1309_p3;
wire   [0:0] deleted_zeros_1_fu_1291_p3;
wire   [0:0] p_Result_2_fu_1223_p3;
wire   [7:0] zext_ln394_1_fu_1317_p1;
wire   [7:0] select_ln394_1_fu_1321_p3;
wire  signed [19:0] sext_ln703_10_fu_1337_p1;
wire  signed [19:0] sext_ln703_11_fu_1340_p1;
wire   [17:0] rhs_11_fu_1349_p3;
wire  signed [19:0] sext_ln1192_2_fu_1356_p1;
wire   [19:0] ret_V_7_fu_1343_p2;
wire   [19:0] ret_V_8_fu_1360_p2;
wire   [7:0] zext_ln415_4_fu_1374_p1;
wire   [6:0] zext_ln415_5_fu_1377_p1;
wire   [7:0] p_Val2_9_fu_1380_p2;
wire   [0:0] tmp_17_fu_1390_p3;
wire   [3:0] tmp_2_fu_1404_p4;
wire   [0:0] Range1_all_zeros_2_fu_1420_p2;
wire   [0:0] Range1_all_ones_2_fu_1414_p2;
wire   [0:0] select_ln778_2_fu_1426_p3;
wire   [0:0] carry_5_fu_1398_p2;
wire   [0:0] and_ln781_8_fu_1441_p2;
wire   [0:0] and_ln781_2_fu_1447_p2;
wire   [6:0] add_ln416_2_fu_1385_p2;
wire   [6:0] select_ln396_2_fu_1452_p3;
wire   [0:0] deleted_zeros_2_fu_1434_p3;
wire   [0:0] p_Result_4_fu_1366_p3;
wire   [7:0] zext_ln394_2_fu_1460_p1;
wire   [7:0] select_ln394_2_fu_1464_p3;
wire  signed [19:0] sext_ln703_14_fu_1480_p1;
wire  signed [19:0] sext_ln703_15_fu_1483_p1;
wire   [19:0] ret_V_10_fu_1486_p2;
wire   [19:0] ret_V_11_fu_1492_p2;
wire   [7:0] zext_ln415_6_fu_1506_p1;
wire   [6:0] zext_ln415_7_fu_1509_p1;
wire   [7:0] p_Val2_12_fu_1512_p2;
wire   [0:0] tmp_21_fu_1522_p3;
wire   [3:0] tmp_3_fu_1536_p4;
wire   [0:0] Range1_all_zeros_3_fu_1552_p2;
wire   [0:0] Range1_all_ones_3_fu_1546_p2;
wire   [0:0] select_ln778_3_fu_1558_p3;
wire   [0:0] carry_7_fu_1530_p2;
wire   [0:0] and_ln781_9_fu_1573_p2;
wire   [0:0] and_ln781_3_fu_1579_p2;
wire   [6:0] add_ln416_3_fu_1517_p2;
wire   [6:0] select_ln396_3_fu_1584_p3;
wire   [0:0] deleted_zeros_3_fu_1566_p3;
wire   [0:0] p_Result_6_fu_1498_p3;
wire   [7:0] zext_ln394_3_fu_1592_p1;
wire   [7:0] select_ln394_3_fu_1596_p3;
wire  signed [19:0] sext_ln703_18_fu_1612_p1;
wire  signed [19:0] sext_ln703_19_fu_1615_p1;
wire   [19:0] ret_V_13_fu_1618_p2;
wire   [19:0] ret_V_14_fu_1624_p2;
wire   [7:0] zext_ln415_8_fu_1638_p1;
wire   [6:0] zext_ln415_9_fu_1641_p1;
wire   [7:0] p_Val2_15_fu_1644_p2;
wire   [0:0] tmp_25_fu_1654_p3;
wire   [3:0] tmp_4_fu_1668_p4;
wire   [0:0] Range1_all_zeros_4_fu_1684_p2;
wire   [0:0] Range1_all_ones_4_fu_1678_p2;
wire   [0:0] select_ln778_4_fu_1690_p3;
wire   [0:0] carry_9_fu_1662_p2;
wire   [0:0] and_ln781_10_fu_1705_p2;
wire   [0:0] and_ln781_4_fu_1711_p2;
wire   [6:0] add_ln416_4_fu_1649_p2;
wire   [6:0] select_ln396_4_fu_1716_p3;
wire   [0:0] deleted_zeros_4_fu_1698_p3;
wire   [0:0] p_Result_8_fu_1630_p3;
wire   [7:0] zext_ln394_4_fu_1724_p1;
wire   [7:0] select_ln394_4_fu_1728_p3;
wire  signed [19:0] sext_ln703_22_fu_1744_p1;
wire  signed [19:0] sext_ln703_23_fu_1747_p1;
wire   [19:0] ret_V_16_fu_1750_p2;
wire   [19:0] ret_V_17_fu_1756_p2;
wire   [7:0] zext_ln415_10_fu_1770_p1;
wire   [6:0] zext_ln415_11_fu_1773_p1;
wire   [7:0] p_Val2_18_fu_1776_p2;
wire   [0:0] tmp_29_fu_1786_p3;
wire   [3:0] tmp_5_fu_1800_p4;
wire   [0:0] Range1_all_zeros_5_fu_1816_p2;
wire   [0:0] Range1_all_ones_5_fu_1810_p2;
wire   [0:0] select_ln778_5_fu_1822_p3;
wire   [0:0] carry_11_fu_1794_p2;
wire   [0:0] and_ln781_11_fu_1837_p2;
wire   [0:0] and_ln781_5_fu_1843_p2;
wire   [6:0] add_ln416_5_fu_1781_p2;
wire   [6:0] select_ln396_5_fu_1848_p3;
wire   [0:0] deleted_zeros_5_fu_1830_p3;
wire   [0:0] p_Result_10_fu_1762_p3;
wire   [7:0] zext_ln394_5_fu_1856_p1;
wire   [7:0] select_ln394_5_fu_1860_p3;
wire   [7:0] out6_V_fu_1868_p3;
wire   [7:0] out5_V_fu_1736_p3;
wire   [7:0] out4_V_fu_1604_p3;
wire   [7:0] out3_V_fu_1472_p3;
wire   [7:0] out2_V_fu_1329_p3;
wire   [7:0] out1_V_fu_1186_p3;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_stream_in_48_V_data_V_U_apdone_blk;
wire   [47:0] stream_in_48_TDATA_int_regslice;
wire    stream_in_48_TVALID_int_regslice;
reg    stream_in_48_TREADY_int_regslice;
wire    regslice_both_stream_in_48_V_data_V_U_ack_in;
wire    regslice_both_stream_in_48_V_keep_V_U_apdone_blk;
wire   [5:0] stream_in_48_TKEEP_int_regslice;
wire    regslice_both_stream_in_48_V_keep_V_U_vld_out;
wire    regslice_both_stream_in_48_V_keep_V_U_ack_in;
wire    regslice_both_stream_in_48_V_strb_V_U_apdone_blk;
wire   [5:0] stream_in_48_TSTRB_int_regslice;
wire    regslice_both_stream_in_48_V_strb_V_U_vld_out;
wire    regslice_both_stream_in_48_V_strb_V_U_ack_in;
wire    regslice_both_stream_in_48_V_user_V_U_apdone_blk;
wire   [0:0] stream_in_48_TUSER_int_regslice;
wire    regslice_both_stream_in_48_V_user_V_U_vld_out;
wire    regslice_both_stream_in_48_V_user_V_U_ack_in;
wire    regslice_both_stream_in_48_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_48_TLAST_int_regslice;
wire    regslice_both_stream_in_48_V_last_V_U_vld_out;
wire    regslice_both_stream_in_48_V_last_V_U_ack_in;
wire   [47:0] stream_out_48_TDATA_int_regslice;
reg    stream_out_48_TVALID_int_regslice;
wire    stream_out_48_TREADY_int_regslice;
wire    regslice_both_stream_out_48_V_data_V_U_vld_out;
wire    regslice_both_stream_out_48_V_keep_V_U_apdone_blk;
wire    regslice_both_stream_out_48_V_keep_V_U_ack_in_dummy;
wire    regslice_both_stream_out_48_V_keep_V_U_vld_out;
wire    regslice_both_stream_out_48_V_strb_V_U_apdone_blk;
wire    regslice_both_stream_out_48_V_strb_V_U_ack_in_dummy;
wire    regslice_both_stream_out_48_V_strb_V_U_vld_out;
wire    regslice_both_stream_out_48_V_user_V_U_apdone_blk;
wire    regslice_both_stream_out_48_V_user_V_U_ack_in_dummy;
wire    regslice_both_stream_out_48_V_user_V_U_vld_out;
wire    regslice_both_stream_out_48_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_48_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_48_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 c1_c1_0_data_reg = 10'd0;
#0 c1_c1_0_vld_reg = 1'b0;
#0 c1_c2_0_data_reg = 10'd0;
#0 c1_c2_0_vld_reg = 1'b0;
#0 c1_c3_0_data_reg = 10'd0;
#0 c1_c3_0_vld_reg = 1'b0;
#0 c2_c1_0_data_reg = 10'd0;
#0 c2_c1_0_vld_reg = 1'b0;
#0 c2_c2_0_data_reg = 10'd0;
#0 c2_c2_0_vld_reg = 1'b0;
#0 c2_c3_0_data_reg = 10'd0;
#0 c2_c3_0_vld_reg = 1'b0;
#0 c3_c1_0_data_reg = 10'd0;
#0 c3_c1_0_vld_reg = 1'b0;
#0 c3_c2_0_data_reg = 10'd0;
#0 c3_c2_0_vld_reg = 1'b0;
#0 c3_c3_0_data_reg = 10'd0;
#0 c3_c3_0_vld_reg = 1'b0;
#0 bias_c1_0_data_reg = 10'd0;
#0 bias_c1_0_vld_reg = 1'b0;
#0 bias_c2_0_data_reg = 10'd0;
#0 bias_c2_0_vld_reg = 1'b0;
#0 bias_c3_0_data_reg = 10'd0;
#0 bias_c3_0_vld_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

color_convert_2_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .c1_c1(c1_c1),
    .c1_c2(c1_c2),
    .c1_c3(c1_c3),
    .c2_c1(c2_c1),
    .c2_c2(c2_c2),
    .c2_c3(c2_c3),
    .c3_c1(c3_c1),
    .c3_c2(c3_c2),
    .c3_c3(c3_c3),
    .bias_c1(bias_c1),
    .bias_c2(bias_c2),
    .bias_c3(bias_c3)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U1(
    .din0(r_V_fu_355_p0),
    .din1(r_V_fu_355_p1),
    .dout(r_V_fu_355_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U2(
    .din0(r_V_7_fu_371_p0),
    .din1(r_V_7_fu_371_p1),
    .dout(r_V_7_fu_371_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U3(
    .din0(r_V_8_fu_387_p0),
    .din1(r_V_8_fu_387_p1),
    .dout(r_V_8_fu_387_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U4(
    .din0(r_V_9_fu_404_p0),
    .din1(r_V_9_fu_404_p1),
    .dout(r_V_9_fu_404_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U5(
    .din0(r_V_10_fu_417_p0),
    .din1(r_V_10_fu_417_p1),
    .dout(r_V_10_fu_417_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U6(
    .din0(r_V_11_fu_430_p0),
    .din1(r_V_11_fu_430_p1),
    .dout(r_V_11_fu_430_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U7(
    .din0(r_V_12_fu_447_p0),
    .din1(r_V_12_fu_447_p1),
    .dout(r_V_12_fu_447_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U8(
    .din0(r_V_13_fu_460_p0),
    .din1(r_V_13_fu_460_p1),
    .dout(r_V_13_fu_460_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U9(
    .din0(r_V_14_fu_473_p0),
    .din1(r_V_14_fu_473_p1),
    .dout(r_V_14_fu_473_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U10(
    .din0(r_V_15_fu_490_p0),
    .din1(r_V_15_fu_490_p1),
    .dout(r_V_15_fu_490_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U11(
    .din0(r_V_16_fu_503_p0),
    .din1(r_V_16_fu_503_p1),
    .dout(r_V_16_fu_503_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U12(
    .din0(r_V_17_fu_516_p0),
    .din1(r_V_17_fu_516_p1),
    .dout(r_V_17_fu_516_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U13(
    .din0(r_V_18_fu_530_p0),
    .din1(r_V_18_fu_530_p1),
    .dout(r_V_18_fu_530_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U14(
    .din0(r_V_19_fu_540_p0),
    .din1(r_V_19_fu_540_p1),
    .dout(r_V_19_fu_540_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U15(
    .din0(r_V_20_fu_550_p0),
    .din1(r_V_20_fu_550_p1),
    .dout(r_V_20_fu_550_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U16(
    .din0(r_V_21_fu_564_p0),
    .din1(r_V_21_fu_564_p1),
    .dout(r_V_21_fu_564_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U17(
    .din0(r_V_22_fu_574_p0),
    .din1(r_V_22_fu_574_p1),
    .dout(r_V_22_fu_574_p2)
);

color_convert_2_mul_10s_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8ns_18_1_1_U18(
    .din0(r_V_23_fu_584_p0),
    .din1(r_V_23_fu_584_p1),
    .dout(r_V_23_fu_584_p2)
);

color_convert_2_regslice_both #(
    .DataWidth( 48 ))
regslice_both_stream_in_48_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_48_TDATA),
    .vld_in(stream_in_48_TVALID),
    .ack_in(regslice_both_stream_in_48_V_data_V_U_ack_in),
    .data_out(stream_in_48_TDATA_int_regslice),
    .vld_out(stream_in_48_TVALID_int_regslice),
    .ack_out(stream_in_48_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_48_V_data_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 6 ))
regslice_both_stream_in_48_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_48_TKEEP),
    .vld_in(stream_in_48_TVALID),
    .ack_in(regslice_both_stream_in_48_V_keep_V_U_ack_in),
    .data_out(stream_in_48_TKEEP_int_regslice),
    .vld_out(regslice_both_stream_in_48_V_keep_V_U_vld_out),
    .ack_out(stream_in_48_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_48_V_keep_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 6 ))
regslice_both_stream_in_48_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_48_TSTRB),
    .vld_in(stream_in_48_TVALID),
    .ack_in(regslice_both_stream_in_48_V_strb_V_U_ack_in),
    .data_out(stream_in_48_TSTRB_int_regslice),
    .vld_out(regslice_both_stream_in_48_V_strb_V_U_vld_out),
    .ack_out(stream_in_48_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_48_V_strb_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_48_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_48_TUSER),
    .vld_in(stream_in_48_TVALID),
    .ack_in(regslice_both_stream_in_48_V_user_V_U_ack_in),
    .data_out(stream_in_48_TUSER_int_regslice),
    .vld_out(regslice_both_stream_in_48_V_user_V_U_vld_out),
    .ack_out(stream_in_48_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_48_V_user_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_48_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_48_TLAST),
    .vld_in(stream_in_48_TVALID),
    .ack_in(regslice_both_stream_in_48_V_last_V_U_ack_in),
    .data_out(stream_in_48_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_48_V_last_V_U_vld_out),
    .ack_out(stream_in_48_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_48_V_last_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 48 ))
regslice_both_stream_out_48_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_out_48_TDATA_int_regslice),
    .vld_in(stream_out_48_TVALID_int_regslice),
    .ack_in(stream_out_48_TREADY_int_regslice),
    .data_out(stream_out_48_TDATA),
    .vld_out(regslice_both_stream_out_48_V_data_V_U_vld_out),
    .ack_out(stream_out_48_TREADY),
    .apdone_blk(regslice_both_stream_out_48_V_data_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 6 ))
regslice_both_stream_out_48_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_keep_reg_1893_pp0_iter3_reg),
    .vld_in(stream_out_48_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_48_V_keep_V_U_ack_in_dummy),
    .data_out(stream_out_48_TKEEP),
    .vld_out(regslice_both_stream_out_48_V_keep_V_U_vld_out),
    .ack_out(stream_out_48_TREADY),
    .apdone_blk(regslice_both_stream_out_48_V_keep_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 6 ))
regslice_both_stream_out_48_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_strb_reg_1898_pp0_iter3_reg),
    .vld_in(stream_out_48_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_48_V_strb_V_U_ack_in_dummy),
    .data_out(stream_out_48_TSTRB),
    .vld_out(regslice_both_stream_out_48_V_strb_V_U_vld_out),
    .ack_out(stream_out_48_TREADY),
    .apdone_blk(regslice_both_stream_out_48_V_strb_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_48_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_user_reg_1903_pp0_iter3_reg),
    .vld_in(stream_out_48_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_48_V_user_V_U_ack_in_dummy),
    .data_out(stream_out_48_TUSER),
    .vld_out(regslice_both_stream_out_48_V_user_V_U_vld_out),
    .ack_out(stream_out_48_TREADY),
    .apdone_blk(regslice_both_stream_out_48_V_user_V_U_apdone_blk)
);

color_convert_2_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_48_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i1_last_reg_1908_pp0_iter3_reg),
    .vld_in(stream_out_48_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_48_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_48_TLAST),
    .vld_out(regslice_both_stream_out_48_V_last_V_U_vld_out),
    .ack_out(stream_out_48_TREADY),
    .apdone_blk(regslice_both_stream_out_48_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((bias_c1_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (bias_c1_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (bias_c1_0_vld_reg == 1'b0)))) begin
        bias_c1_0_data_reg <= bias_c1;
    end
end

always @ (posedge ap_clk) begin
    if ((((bias_c2_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (bias_c2_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (bias_c2_0_vld_reg == 1'b0)))) begin
        bias_c2_0_data_reg <= bias_c2;
    end
end

always @ (posedge ap_clk) begin
    if ((((bias_c3_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (bias_c3_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (bias_c3_0_vld_reg == 1'b0)))) begin
        bias_c3_0_data_reg <= bias_c3;
    end
end

always @ (posedge ap_clk) begin
    if ((((c1_c1_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c1_c1_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c1_c1_0_vld_reg == 1'b0)))) begin
        c1_c1_0_data_reg <= c1_c1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c1_c1_read_reg_1943 <= c1_c1_0_data_reg;
        c1_c2_read_reg_1948 <= c1_c2_0_data_reg;
        c1_c3_read_reg_1953 <= c1_c3_0_data_reg;
        c2_c1_read_reg_1968 <= c2_c1_0_data_reg;
        c2_c2_read_reg_1973 <= c2_c2_0_data_reg;
        c2_c3_read_reg_1978 <= c2_c3_0_data_reg;
        c3_c1_read_reg_1993 <= c3_c1_0_data_reg;
        c3_c2_read_reg_1998 <= c3_c2_0_data_reg;
        c3_c3_read_reg_2003 <= c3_c3_0_data_reg;
        rhs_10_reg_2008 <= bias_c3_0_data_reg;
        rhs_2_reg_1958 <= bias_c1_0_data_reg;
        rhs_6_reg_1983 <= bias_c2_0_data_reg;
        tmp_i1_keep_reg_1893 <= stream_in_48_TKEEP_int_regslice;
        tmp_i1_keep_reg_1893_pp0_iter1_reg <= tmp_i1_keep_reg_1893;
        tmp_i1_last_reg_1908 <= stream_in_48_TLAST_int_regslice;
        tmp_i1_last_reg_1908_pp0_iter1_reg <= tmp_i1_last_reg_1908;
        tmp_i1_strb_reg_1898 <= stream_in_48_TSTRB_int_regslice;
        tmp_i1_strb_reg_1898_pp0_iter1_reg <= tmp_i1_strb_reg_1898;
        tmp_i1_user_reg_1903 <= stream_in_48_TUSER_int_regslice;
        tmp_i1_user_reg_1903_pp0_iter1_reg <= tmp_i1_user_reg_1903;
        trunc_ln1192_14_reg_2013 <= trunc_ln1192_14_fu_345_p1;
        trunc_ln1192_3_reg_1963 <= trunc_ln1192_3_fu_337_p1;
        trunc_ln1192_8_reg_1988 <= trunc_ln1192_8_fu_341_p1;
        v_p1_V_reg_1913 <= v_p1_V_fu_283_p1;
        v_p1_V_reg_1913_pp0_iter1_reg <= v_p1_V_reg_1913;
        v_p2_V_reg_1918 <= {{stream_in_48_TDATA_int_regslice[15:8]}};
        v_p2_V_reg_1918_pp0_iter1_reg <= v_p2_V_reg_1918;
        v_p3_V_reg_1923 <= {{stream_in_48_TDATA_int_regslice[23:16]}};
        v_p3_V_reg_1923_pp0_iter1_reg <= v_p3_V_reg_1923;
        v_p4_V_reg_1928 <= {{stream_in_48_TDATA_int_regslice[31:24]}};
        v_p4_V_reg_1928_pp0_iter1_reg <= v_p4_V_reg_1928;
        v_p5_V_reg_1933 <= {{stream_in_48_TDATA_int_regslice[39:32]}};
        v_p5_V_reg_1933_pp0_iter1_reg <= v_p5_V_reg_1933;
        v_p6_V_reg_1938 <= {{stream_in_48_TDATA_int_regslice[47:40]}};
        v_p6_V_reg_1938_pp0_iter1_reg <= v_p6_V_reg_1938;
    end
end

always @ (posedge ap_clk) begin
    if ((((c1_c2_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c1_c2_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c1_c2_0_vld_reg == 1'b0)))) begin
        c1_c2_0_data_reg <= c1_c2;
    end
end

always @ (posedge ap_clk) begin
    if ((((c1_c3_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c1_c3_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c1_c3_0_vld_reg == 1'b0)))) begin
        c1_c3_0_data_reg <= c1_c3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (c2_c1_0_vld_reg == 1'b0)) | ((1'b1 == 1'b1) & (c2_c1_0_vld_reg == 1'b1) & (c2_c1_0_ack_out == 1'b1)))) begin
        c2_c1_0_data_reg <= c2_c1;
    end
end

always @ (posedge ap_clk) begin
    if ((((c2_c2_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c2_c2_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c2_c2_0_vld_reg == 1'b0)))) begin
        c2_c2_0_data_reg <= c2_c2;
    end
end

always @ (posedge ap_clk) begin
    if ((((c2_c3_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c2_c3_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c2_c3_0_vld_reg == 1'b0)))) begin
        c2_c3_0_data_reg <= c2_c3;
    end
end

always @ (posedge ap_clk) begin
    if ((((c3_c1_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c3_c1_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c3_c1_0_vld_reg == 1'b0)))) begin
        c3_c1_0_data_reg <= c3_c1;
    end
end

always @ (posedge ap_clk) begin
    if ((((c3_c2_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c3_c2_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c3_c2_0_vld_reg == 1'b0)))) begin
        c3_c2_0_data_reg <= c3_c2;
    end
end

always @ (posedge ap_clk) begin
    if ((((c3_c3_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (c3_c3_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (c3_c3_0_vld_reg == 1'b0)))) begin
        c3_c3_0_data_reg <= c3_c3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        p_Result_11_reg_2373 <= add_ln1192_33_fu_1009_p2[32'd15];
        p_Result_1_reg_2238 <= add_ln1192_3_fu_635_p2[32'd15];
        p_Result_3_reg_2265 <= add_ln1192_9_fu_714_p2[32'd15];
        p_Result_5_reg_2292 <= add_ln1192_15_fu_793_p2[32'd15];
        p_Result_7_reg_2319 <= add_ln1192_21_fu_865_p2[32'd15];
        p_Result_9_reg_2346 <= add_ln1192_27_fu_937_p2[32'd15];
        p_Val2_11_reg_2314 <= {{add_ln1192_21_fu_865_p2[15:8]}};
        p_Val2_14_reg_2341 <= {{add_ln1192_27_fu_937_p2[15:8]}};
        p_Val2_17_reg_2368 <= {{add_ln1192_33_fu_1009_p2[15:8]}};
        p_Val2_2_reg_2233 <= {{add_ln1192_3_fu_635_p2[15:8]}};
        p_Val2_5_reg_2260 <= {{add_ln1192_9_fu_714_p2[15:8]}};
        p_Val2_8_reg_2287 <= {{add_ln1192_15_fu_793_p2[15:8]}};
        r_V_10_reg_2063 <= r_V_10_fu_417_p2;
        r_V_11_reg_2073 <= r_V_11_fu_430_p2;
        r_V_11_reg_2073_pp0_iter3_reg <= r_V_11_reg_2073;
        r_V_12_reg_2088 <= r_V_12_fu_447_p2;
        r_V_13_reg_2098 <= r_V_13_fu_460_p2;
        r_V_14_reg_2108 <= r_V_14_fu_473_p2;
        r_V_14_reg_2108_pp0_iter3_reg <= r_V_14_reg_2108;
        r_V_15_reg_2123 <= r_V_15_fu_490_p2;
        r_V_16_reg_2133 <= r_V_16_fu_503_p2;
        r_V_17_reg_2143 <= r_V_17_fu_516_p2;
        r_V_17_reg_2143_pp0_iter3_reg <= r_V_17_reg_2143;
        r_V_18_reg_2158 <= r_V_18_fu_530_p2;
        r_V_19_reg_2168 <= r_V_19_fu_540_p2;
        r_V_20_reg_2178 <= r_V_20_fu_550_p2;
        r_V_20_reg_2178_pp0_iter3_reg <= r_V_20_reg_2178;
        r_V_21_reg_2193 <= r_V_21_fu_564_p2;
        r_V_22_reg_2203 <= r_V_22_fu_574_p2;
        r_V_23_reg_2213 <= r_V_23_fu_584_p2;
        r_V_23_reg_2213_pp0_iter3_reg <= r_V_23_reg_2213;
        r_V_7_reg_2028 <= r_V_7_fu_371_p2;
        r_V_8_reg_2038 <= r_V_8_fu_387_p2;
        r_V_8_reg_2038_pp0_iter3_reg <= r_V_8_reg_2038;
        r_V_9_reg_2053 <= r_V_9_fu_404_p2;
        r_V_reg_2018 <= r_V_fu_355_p2;
        ret_V_12_reg_2336 <= ret_V_12_fu_917_p2;
        ret_V_15_reg_2363 <= ret_V_15_fu_989_p2;
        ret_V_3_reg_2255 <= ret_V_3_fu_687_p2;
        ret_V_6_reg_2282 <= ret_V_6_fu_766_p2;
        ret_V_9_reg_2309 <= ret_V_9_fu_845_p2;
        ret_V_reg_2228 <= ret_V_fu_608_p2;
        rhs_10_reg_2008_pp0_iter2_reg <= rhs_10_reg_2008;
        rhs_10_reg_2008_pp0_iter3_reg <= rhs_10_reg_2008_pp0_iter2_reg;
        rhs_2_reg_1958_pp0_iter2_reg <= rhs_2_reg_1958;
        rhs_2_reg_1958_pp0_iter3_reg <= rhs_2_reg_1958_pp0_iter2_reg;
        rhs_6_reg_1983_pp0_iter2_reg <= rhs_6_reg_1983;
        rhs_6_reg_1983_pp0_iter3_reg <= rhs_6_reg_1983_pp0_iter2_reg;
        tmp_12_reg_2271 <= add_ln1192_8_fu_709_p2[32'd7];
        tmp_16_reg_2298 <= add_ln1192_14_fu_788_p2[32'd7];
        tmp_20_reg_2325 <= add_ln1192_20_fu_860_p2[32'd7];
        tmp_24_reg_2352 <= add_ln1192_26_fu_932_p2[32'd7];
        tmp_28_reg_2379 <= add_ln1192_32_fu_1004_p2[32'd7];
        tmp_8_reg_2244 <= add_ln1192_2_fu_630_p2[32'd7];
        tmp_i1_keep_reg_1893_pp0_iter2_reg <= tmp_i1_keep_reg_1893_pp0_iter1_reg;
        tmp_i1_keep_reg_1893_pp0_iter3_reg <= tmp_i1_keep_reg_1893_pp0_iter2_reg;
        tmp_i1_last_reg_1908_pp0_iter2_reg <= tmp_i1_last_reg_1908_pp0_iter1_reg;
        tmp_i1_last_reg_1908_pp0_iter3_reg <= tmp_i1_last_reg_1908_pp0_iter2_reg;
        tmp_i1_strb_reg_1898_pp0_iter2_reg <= tmp_i1_strb_reg_1898_pp0_iter1_reg;
        tmp_i1_strb_reg_1898_pp0_iter3_reg <= tmp_i1_strb_reg_1898_pp0_iter2_reg;
        tmp_i1_user_reg_1903_pp0_iter2_reg <= tmp_i1_user_reg_1903_pp0_iter1_reg;
        tmp_i1_user_reg_1903_pp0_iter3_reg <= tmp_i1_user_reg_1903_pp0_iter2_reg;
        trunc_ln1115_10_reg_2198 <= trunc_ln1115_10_fu_570_p1;
        trunc_ln1115_11_reg_2208 <= trunc_ln1115_11_fu_580_p1;
        trunc_ln1115_1_reg_2033 <= trunc_ln1115_1_fu_377_p1;
        trunc_ln1115_2_reg_2058 <= trunc_ln1115_2_fu_410_p1;
        trunc_ln1115_3_reg_2068 <= trunc_ln1115_3_fu_423_p1;
        trunc_ln1115_4_reg_2093 <= trunc_ln1115_4_fu_453_p1;
        trunc_ln1115_5_reg_2103 <= trunc_ln1115_5_fu_466_p1;
        trunc_ln1115_6_reg_2128 <= trunc_ln1115_6_fu_496_p1;
        trunc_ln1115_7_reg_2138 <= trunc_ln1115_7_fu_509_p1;
        trunc_ln1115_8_reg_2163 <= trunc_ln1115_8_fu_536_p1;
        trunc_ln1115_9_reg_2173 <= trunc_ln1115_9_fu_546_p1;
        trunc_ln1115_reg_2023 <= trunc_ln1115_fu_361_p1;
        trunc_ln1192_10_reg_2113 <= trunc_ln1192_10_fu_479_p1;
        trunc_ln1192_12_reg_2118 <= trunc_ln1192_12_fu_483_p1;
        trunc_ln1192_14_reg_2013_pp0_iter2_reg <= trunc_ln1192_14_reg_2013;
        trunc_ln1192_15_reg_2148 <= trunc_ln1192_15_fu_522_p1;
        trunc_ln1192_17_reg_2153 <= trunc_ln1192_17_fu_526_p1;
        trunc_ln1192_18_reg_2183 <= trunc_ln1192_18_fu_556_p1;
        trunc_ln1192_20_reg_2188 <= trunc_ln1192_20_fu_560_p1;
        trunc_ln1192_21_reg_2218 <= trunc_ln1192_21_fu_590_p1;
        trunc_ln1192_23_reg_2223 <= trunc_ln1192_23_fu_594_p1;
        trunc_ln1192_2_reg_2048 <= trunc_ln1192_2_fu_397_p1;
        trunc_ln1192_3_reg_1963_pp0_iter2_reg <= trunc_ln1192_3_reg_1963;
        trunc_ln1192_5_reg_2078 <= trunc_ln1192_5_fu_436_p1;
        trunc_ln1192_7_reg_2083 <= trunc_ln1192_7_fu_440_p1;
        trunc_ln1192_8_reg_1988_pp0_iter2_reg <= trunc_ln1192_8_reg_1988;
        trunc_ln1192_reg_2043 <= trunc_ln1192_fu_393_p1;
        trunc_ln415_1_reg_2385 <= {{add_ln1192_33_fu_1009_p2[14:8]}};
        trunc_ln415_6_reg_2250 <= {{add_ln1192_3_fu_635_p2[14:8]}};
        trunc_ln415_7_reg_2277 <= {{add_ln1192_9_fu_714_p2[14:8]}};
        trunc_ln415_8_reg_2304 <= {{add_ln1192_15_fu_793_p2[14:8]}};
        trunc_ln415_9_reg_2331 <= {{add_ln1192_21_fu_865_p2[14:8]}};
        trunc_ln415_s_reg_2358 <= {{add_ln1192_27_fu_937_p2[14:8]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_c1_0_ack_out = 1'b1;
    end else begin
        bias_c1_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_c2_0_ack_out = 1'b1;
    end else begin
        bias_c2_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        bias_c3_0_ack_out = 1'b1;
    end else begin
        bias_c3_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c1_c1_0_ack_out = 1'b1;
    end else begin
        c1_c1_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c1_c2_0_ack_out = 1'b1;
    end else begin
        c1_c2_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c1_c3_0_ack_out = 1'b1;
    end else begin
        c1_c3_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c2_c1_0_ack_out = 1'b1;
    end else begin
        c2_c1_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c2_c2_0_ack_out = 1'b1;
    end else begin
        c2_c2_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c2_c3_0_ack_out = 1'b1;
    end else begin
        c2_c3_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c3_c1_0_ack_out = 1'b1;
    end else begin
        c3_c1_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c3_c2_0_ack_out = 1'b1;
    end else begin
        c3_c2_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c3_c3_0_ack_out = 1'b1;
    end else begin
        c3_c3_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_48_TDATA_blk_n = stream_in_48_TVALID_int_regslice;
    end else begin
        stream_in_48_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_48_TREADY_int_regslice = 1'b1;
    end else begin
        stream_in_48_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_out_48_TDATA_blk_n = stream_out_48_TREADY_int_regslice;
    end else begin
        stream_out_48_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        stream_out_48_TVALID_int_regslice = 1'b1;
    end else begin
        stream_out_48_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_1271_p2 = ((tmp_fu_1261_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_1414_p2 = ((tmp_2_fu_1404_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_1546_p2 = ((tmp_3_fu_1536_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_1678_p2 = ((tmp_4_fu_1668_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_1810_p2 = ((tmp_5_fu_1800_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_1128_p2 = ((tmp_1_fu_1118_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_1277_p2 = ((tmp_fu_1261_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_1420_p2 = ((tmp_2_fu_1404_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_1552_p2 = ((tmp_3_fu_1536_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_1684_p2 = ((tmp_4_fu_1668_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_1816_p2 = ((tmp_5_fu_1800_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1134_p2 = ((tmp_1_fu_1118_p4 == 4'd0) ? 1'b1 : 1'b0);

assign add_ln1192_10_fu_683_p2 = (trunc_ln1115_3_reg_2068 + trunc_ln1115_2_reg_2058);

assign add_ln1192_12_fu_776_p2 = (add_ln1192_17_fu_762_p2 + trunc_ln1192_12_reg_2118);

assign add_ln1192_14_fu_788_p2 = (trunc_ln1192_11_fu_772_p1 + trunc_ln1192_10_reg_2113);

assign add_ln1192_15_fu_793_p2 = (trunc_ln1192_s_fu_781_p3 + add_ln1192_12_fu_776_p2);

assign add_ln1192_17_fu_762_p2 = (trunc_ln1115_5_reg_2103 + trunc_ln1115_4_reg_2093);

assign add_ln1192_18_fu_855_p2 = (add_ln1192_25_fu_841_p2 + trunc_ln1192_17_reg_2153);

assign add_ln1192_1_fu_604_p2 = (trunc_ln1115_1_reg_2033 + trunc_ln1115_reg_2023);

assign add_ln1192_20_fu_860_p2 = (trunc_ln1192_16_fu_851_p1 + trunc_ln1192_15_reg_2148);

assign add_ln1192_21_fu_865_p2 = (trunc_ln1192_4_fu_623_p3 + add_ln1192_18_fu_855_p2);

assign add_ln1192_24_fu_927_p2 = (add_ln1192_34_fu_913_p2 + trunc_ln1192_20_reg_2188);

assign add_ln1192_25_fu_841_p2 = (trunc_ln1115_7_reg_2138 + trunc_ln1115_6_reg_2128);

assign add_ln1192_26_fu_932_p2 = (trunc_ln1192_19_fu_923_p1 + trunc_ln1192_18_reg_2183);

assign add_ln1192_27_fu_937_p2 = (trunc_ln1192_9_fu_702_p3 + add_ln1192_24_fu_927_p2);

assign add_ln1192_2_fu_630_p2 = (trunc_ln1192_1_fu_614_p1 + trunc_ln1192_reg_2043);

assign add_ln1192_30_fu_999_p2 = (add_ln1192_38_fu_985_p2 + trunc_ln1192_23_reg_2223);

assign add_ln1192_32_fu_1004_p2 = (trunc_ln1192_22_fu_995_p1 + trunc_ln1192_21_reg_2218);

assign add_ln1192_33_fu_1009_p2 = (trunc_ln1192_s_fu_781_p3 + add_ln1192_30_fu_999_p2);

assign add_ln1192_34_fu_913_p2 = (trunc_ln1115_9_reg_2173 + trunc_ln1115_8_reg_2163);

assign add_ln1192_38_fu_985_p2 = (trunc_ln1115_11_reg_2208 + trunc_ln1115_10_reg_2198);

assign add_ln1192_3_fu_635_p2 = (trunc_ln1192_4_fu_623_p3 + add_ln1192_fu_618_p2);

assign add_ln1192_6_fu_697_p2 = (add_ln1192_10_fu_683_p2 + trunc_ln1192_7_reg_2083);

assign add_ln1192_8_fu_709_p2 = (trunc_ln1192_6_fu_693_p1 + trunc_ln1192_5_reg_2078);

assign add_ln1192_9_fu_714_p2 = (trunc_ln1192_9_fu_702_p3 + add_ln1192_6_fu_697_p2);

assign add_ln1192_fu_618_p2 = (add_ln1192_1_fu_604_p2 + trunc_ln1192_2_reg_2048);

assign add_ln416_1_fu_1242_p2 = (zext_ln415_3_fu_1234_p1 + trunc_ln415_7_reg_2277);

assign add_ln416_2_fu_1385_p2 = (zext_ln415_5_fu_1377_p1 + trunc_ln415_8_reg_2304);

assign add_ln416_3_fu_1517_p2 = (zext_ln415_7_fu_1509_p1 + trunc_ln415_9_reg_2331);

assign add_ln416_4_fu_1649_p2 = (zext_ln415_9_fu_1641_p1 + trunc_ln415_s_reg_2358);

assign add_ln416_5_fu_1781_p2 = (zext_ln415_11_fu_1773_p1 + trunc_ln415_1_reg_2385);

assign add_ln416_fu_1099_p2 = (zext_ln415_1_fu_1091_p1 + trunc_ln415_6_reg_2250);

assign and_ln781_10_fu_1705_p2 = (carry_9_fu_1662_p2 & Range1_all_ones_4_fu_1678_p2);

assign and_ln781_11_fu_1837_p2 = (carry_11_fu_1794_p2 & Range1_all_ones_5_fu_1810_p2);

assign and_ln781_1_fu_1304_p2 = (p_Result_3_reg_2265 & and_ln781_7_fu_1298_p2);

assign and_ln781_2_fu_1447_p2 = (p_Result_5_reg_2292 & and_ln781_8_fu_1441_p2);

assign and_ln781_3_fu_1579_p2 = (p_Result_7_reg_2319 & and_ln781_9_fu_1573_p2);

assign and_ln781_4_fu_1711_p2 = (p_Result_9_reg_2346 & and_ln781_10_fu_1705_p2);

assign and_ln781_5_fu_1843_p2 = (p_Result_11_reg_2373 & and_ln781_11_fu_1837_p2);

assign and_ln781_6_fu_1155_p2 = (carry_1_fu_1112_p2 & Range1_all_ones_fu_1128_p2);

assign and_ln781_7_fu_1298_p2 = (carry_3_fu_1255_p2 & Range1_all_ones_1_fu_1271_p2);

assign and_ln781_8_fu_1441_p2 = (carry_5_fu_1398_p2 & Range1_all_ones_2_fu_1414_p2);

assign and_ln781_9_fu_1573_p2 = (carry_7_fu_1530_p2 & Range1_all_ones_3_fu_1546_p2);

assign and_ln781_fu_1161_p2 = (p_Result_1_reg_2238 & and_ln781_6_fu_1155_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_stream_out_48_V_data_V_U_apdone_blk == 1'b1) | (stream_out_48_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (stream_out_48_TREADY_int_regslice == 1'b0)) | ((1'b1 == 1'b1) & (stream_in_48_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_stream_out_48_V_data_V_U_apdone_blk == 1'b1) | (stream_out_48_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (stream_out_48_TREADY_int_regslice == 1'b0)) | ((1'b1 == 1'b1) & (stream_in_48_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((regslice_both_stream_out_48_V_data_V_U_apdone_blk == 1'b1) | (stream_out_48_TREADY_int_regslice == 1'b0))) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (stream_out_48_TREADY_int_regslice == 1'b0)) | ((1'b1 == 1'b1) & (stream_in_48_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (stream_in_48_TVALID_int_regslice == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (stream_out_48_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((regslice_both_stream_out_48_V_data_V_U_apdone_blk == 1'b1) | (stream_out_48_TREADY_int_regslice == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign carry_11_fu_1794_p2 = (tmp_29_fu_1786_p3 ^ 1'd1);

assign carry_1_fu_1112_p2 = (tmp_9_fu_1104_p3 ^ 1'd1);

assign carry_3_fu_1255_p2 = (tmp_13_fu_1247_p3 ^ 1'd1);

assign carry_5_fu_1398_p2 = (tmp_17_fu_1390_p3 ^ 1'd1);

assign carry_7_fu_1530_p2 = (tmp_21_fu_1522_p3 ^ 1'd1);

assign carry_9_fu_1662_p2 = (tmp_25_fu_1654_p3 ^ 1'd1);

assign deleted_zeros_1_fu_1291_p3 = ((p_Result_3_reg_2265[0:0] == 1'b1) ? select_ln778_1_fu_1283_p3 : Range1_all_zeros_1_fu_1277_p2);

assign deleted_zeros_2_fu_1434_p3 = ((p_Result_5_reg_2292[0:0] == 1'b1) ? select_ln778_2_fu_1426_p3 : Range1_all_zeros_2_fu_1420_p2);

assign deleted_zeros_3_fu_1566_p3 = ((p_Result_7_reg_2319[0:0] == 1'b1) ? select_ln778_3_fu_1558_p3 : Range1_all_zeros_3_fu_1552_p2);

assign deleted_zeros_4_fu_1698_p3 = ((p_Result_9_reg_2346[0:0] == 1'b1) ? select_ln778_4_fu_1690_p3 : Range1_all_zeros_4_fu_1684_p2);

assign deleted_zeros_5_fu_1830_p3 = ((p_Result_11_reg_2373[0:0] == 1'b1) ? select_ln778_5_fu_1822_p3 : Range1_all_zeros_5_fu_1816_p2);

assign deleted_zeros_fu_1148_p3 = ((p_Result_1_reg_2238[0:0] == 1'b1) ? select_ln778_fu_1140_p3 : Range1_all_zeros_fu_1134_p2);

assign out1_V_fu_1186_p3 = ((p_Result_s_fu_1080_p3[0:0] == 1'b1) ? zext_ln394_fu_1174_p1 : select_ln394_fu_1178_p3);

assign out2_V_fu_1329_p3 = ((p_Result_2_fu_1223_p3[0:0] == 1'b1) ? zext_ln394_1_fu_1317_p1 : select_ln394_1_fu_1321_p3);

assign out3_V_fu_1472_p3 = ((p_Result_4_fu_1366_p3[0:0] == 1'b1) ? zext_ln394_2_fu_1460_p1 : select_ln394_2_fu_1464_p3);

assign out4_V_fu_1604_p3 = ((p_Result_6_fu_1498_p3[0:0] == 1'b1) ? zext_ln394_3_fu_1592_p1 : select_ln394_3_fu_1596_p3);

assign out5_V_fu_1736_p3 = ((p_Result_8_fu_1630_p3[0:0] == 1'b1) ? zext_ln394_4_fu_1724_p1 : select_ln394_4_fu_1728_p3);

assign out6_V_fu_1868_p3 = ((p_Result_10_fu_1762_p3[0:0] == 1'b1) ? zext_ln394_5_fu_1856_p1 : select_ln394_5_fu_1860_p3);

assign p_Result_10_fu_1762_p3 = ret_V_17_fu_1756_p2[32'd19];

assign p_Result_2_fu_1223_p3 = ret_V_5_fu_1217_p2[32'd19];

assign p_Result_4_fu_1366_p3 = ret_V_8_fu_1360_p2[32'd19];

assign p_Result_6_fu_1498_p3 = ret_V_11_fu_1492_p2[32'd19];

assign p_Result_8_fu_1630_p3 = ret_V_14_fu_1624_p2[32'd19];

assign p_Result_s_fu_1080_p3 = ret_V_2_fu_1074_p2[32'd19];

assign p_Val2_12_fu_1512_p2 = (zext_ln415_6_fu_1506_p1 + p_Val2_11_reg_2314);

assign p_Val2_15_fu_1644_p2 = (zext_ln415_8_fu_1638_p1 + p_Val2_14_reg_2341);

assign p_Val2_18_fu_1776_p2 = (zext_ln415_10_fu_1770_p1 + p_Val2_17_reg_2368);

assign p_Val2_3_fu_1094_p2 = (zext_ln415_fu_1088_p1 + p_Val2_2_reg_2233);

assign p_Val2_6_fu_1237_p2 = (zext_ln415_2_fu_1231_p1 + p_Val2_5_reg_2260);

assign p_Val2_9_fu_1380_p2 = (zext_ln415_4_fu_1374_p1 + p_Val2_8_reg_2287);

assign r_V_10_fu_417_p0 = sext_ln1118_4_fu_414_p1;

assign r_V_10_fu_417_p1 = zext_ln1118_1_fu_365_p1;

assign r_V_11_fu_430_p0 = sext_ln1118_5_fu_427_p1;

assign r_V_11_fu_430_p1 = zext_ln1118_2_fu_381_p1;

assign r_V_12_fu_447_p0 = sext_ln1118_6_fu_444_p1;

assign r_V_12_fu_447_p1 = zext_ln1118_fu_349_p1;

assign r_V_13_fu_460_p0 = sext_ln1118_7_fu_457_p1;

assign r_V_13_fu_460_p1 = zext_ln1118_1_fu_365_p1;

assign r_V_14_fu_473_p0 = sext_ln1118_8_fu_470_p1;

assign r_V_14_fu_473_p1 = zext_ln1118_2_fu_381_p1;

assign r_V_15_fu_490_p0 = sext_ln1118_fu_352_p1;

assign r_V_15_fu_490_p1 = zext_ln1118_3_fu_487_p1;

assign r_V_16_fu_503_p0 = sext_ln1118_1_fu_368_p1;

assign r_V_16_fu_503_p1 = zext_ln1118_4_fu_500_p1;

assign r_V_17_fu_516_p0 = sext_ln1118_2_fu_384_p1;

assign r_V_17_fu_516_p1 = zext_ln1118_5_fu_513_p1;

assign r_V_18_fu_530_p0 = sext_ln1118_3_fu_401_p1;

assign r_V_18_fu_530_p1 = zext_ln1118_3_fu_487_p1;

assign r_V_19_fu_540_p0 = sext_ln1118_4_fu_414_p1;

assign r_V_19_fu_540_p1 = zext_ln1118_4_fu_500_p1;

assign r_V_20_fu_550_p0 = sext_ln1118_5_fu_427_p1;

assign r_V_20_fu_550_p1 = zext_ln1118_5_fu_513_p1;

assign r_V_21_fu_564_p0 = sext_ln1118_6_fu_444_p1;

assign r_V_21_fu_564_p1 = zext_ln1118_3_fu_487_p1;

assign r_V_22_fu_574_p0 = sext_ln1118_7_fu_457_p1;

assign r_V_22_fu_574_p1 = zext_ln1118_4_fu_500_p1;

assign r_V_23_fu_584_p0 = sext_ln1118_8_fu_470_p1;

assign r_V_23_fu_584_p1 = zext_ln1118_5_fu_513_p1;

assign r_V_7_fu_371_p0 = sext_ln1118_1_fu_368_p1;

assign r_V_7_fu_371_p1 = zext_ln1118_1_fu_365_p1;

assign r_V_8_fu_387_p0 = sext_ln1118_2_fu_384_p1;

assign r_V_8_fu_387_p1 = zext_ln1118_2_fu_381_p1;

assign r_V_9_fu_404_p0 = sext_ln1118_3_fu_401_p1;

assign r_V_9_fu_404_p1 = zext_ln1118_fu_349_p1;

assign r_V_fu_355_p0 = sext_ln1118_fu_352_p1;

assign r_V_fu_355_p1 = zext_ln1118_fu_349_p1;

assign ret_V_10_fu_1486_p2 = ($signed(sext_ln703_14_fu_1480_p1) + $signed(sext_ln703_15_fu_1483_p1));

assign ret_V_11_fu_1492_p2 = ($signed(sext_ln1192_fu_1070_p1) + $signed(ret_V_10_fu_1486_p2));

assign ret_V_12_fu_917_p2 = ($signed(sext_ln703_17_fu_910_p1) + $signed(sext_ln703_16_fu_907_p1));

assign ret_V_13_fu_1618_p2 = ($signed(sext_ln703_18_fu_1612_p1) + $signed(sext_ln703_19_fu_1615_p1));

assign ret_V_14_fu_1624_p2 = ($signed(sext_ln1192_1_fu_1213_p1) + $signed(ret_V_13_fu_1618_p2));

assign ret_V_15_fu_989_p2 = ($signed(sext_ln703_21_fu_982_p1) + $signed(sext_ln703_20_fu_979_p1));

assign ret_V_16_fu_1750_p2 = ($signed(sext_ln703_22_fu_1744_p1) + $signed(sext_ln703_23_fu_1747_p1));

assign ret_V_17_fu_1756_p2 = ($signed(sext_ln1192_2_fu_1356_p1) + $signed(ret_V_16_fu_1750_p2));

assign ret_V_1_fu_1057_p2 = ($signed(sext_ln703_2_fu_1051_p1) + $signed(sext_ln703_3_fu_1054_p1));

assign ret_V_2_fu_1074_p2 = ($signed(sext_ln1192_fu_1070_p1) + $signed(ret_V_1_fu_1057_p2));

assign ret_V_3_fu_687_p2 = ($signed(sext_ln703_5_fu_680_p1) + $signed(sext_ln703_4_fu_677_p1));

assign ret_V_4_fu_1200_p2 = ($signed(sext_ln703_6_fu_1194_p1) + $signed(sext_ln703_7_fu_1197_p1));

assign ret_V_5_fu_1217_p2 = ($signed(sext_ln1192_1_fu_1213_p1) + $signed(ret_V_4_fu_1200_p2));

assign ret_V_6_fu_766_p2 = ($signed(sext_ln703_9_fu_759_p1) + $signed(sext_ln703_8_fu_756_p1));

assign ret_V_7_fu_1343_p2 = ($signed(sext_ln703_10_fu_1337_p1) + $signed(sext_ln703_11_fu_1340_p1));

assign ret_V_8_fu_1360_p2 = ($signed(sext_ln1192_2_fu_1356_p1) + $signed(ret_V_7_fu_1343_p2));

assign ret_V_9_fu_845_p2 = ($signed(sext_ln703_13_fu_838_p1) + $signed(sext_ln703_12_fu_835_p1));

assign ret_V_fu_608_p2 = ($signed(sext_ln703_1_fu_601_p1) + $signed(sext_ln703_fu_598_p1));

assign rhs_11_fu_1349_p3 = {{rhs_10_reg_2008_pp0_iter3_reg}, {8'd0}};

assign rhs_3_fu_1063_p3 = {{rhs_2_reg_1958_pp0_iter3_reg}, {8'd0}};

assign rhs_7_fu_1206_p3 = {{rhs_6_reg_1983_pp0_iter3_reg}, {8'd0}};

assign select_ln394_1_fu_1321_p3 = ((deleted_zeros_1_fu_1291_p3[0:0] == 1'b1) ? p_Val2_6_fu_1237_p2 : 8'd255);

assign select_ln394_2_fu_1464_p3 = ((deleted_zeros_2_fu_1434_p3[0:0] == 1'b1) ? p_Val2_9_fu_1380_p2 : 8'd255);

assign select_ln394_3_fu_1596_p3 = ((deleted_zeros_3_fu_1566_p3[0:0] == 1'b1) ? p_Val2_12_fu_1512_p2 : 8'd255);

assign select_ln394_4_fu_1728_p3 = ((deleted_zeros_4_fu_1698_p3[0:0] == 1'b1) ? p_Val2_15_fu_1644_p2 : 8'd255);

assign select_ln394_5_fu_1860_p3 = ((deleted_zeros_5_fu_1830_p3[0:0] == 1'b1) ? p_Val2_18_fu_1776_p2 : 8'd255);

assign select_ln394_fu_1178_p3 = ((deleted_zeros_fu_1148_p3[0:0] == 1'b1) ? p_Val2_3_fu_1094_p2 : 8'd255);

assign select_ln396_1_fu_1309_p3 = ((and_ln781_1_fu_1304_p2[0:0] == 1'b1) ? add_ln416_1_fu_1242_p2 : 7'd0);

assign select_ln396_2_fu_1452_p3 = ((and_ln781_2_fu_1447_p2[0:0] == 1'b1) ? add_ln416_2_fu_1385_p2 : 7'd0);

assign select_ln396_3_fu_1584_p3 = ((and_ln781_3_fu_1579_p2[0:0] == 1'b1) ? add_ln416_3_fu_1517_p2 : 7'd0);

assign select_ln396_4_fu_1716_p3 = ((and_ln781_4_fu_1711_p2[0:0] == 1'b1) ? add_ln416_4_fu_1649_p2 : 7'd0);

assign select_ln396_5_fu_1848_p3 = ((and_ln781_5_fu_1843_p2[0:0] == 1'b1) ? add_ln416_5_fu_1781_p2 : 7'd0);

assign select_ln396_fu_1166_p3 = ((and_ln781_fu_1161_p2[0:0] == 1'b1) ? add_ln416_fu_1099_p2 : 7'd0);

assign select_ln778_1_fu_1283_p3 = ((tmp_13_fu_1247_p3[0:0] == 1'b1) ? Range1_all_zeros_1_fu_1277_p2 : Range1_all_ones_1_fu_1271_p2);

assign select_ln778_2_fu_1426_p3 = ((tmp_17_fu_1390_p3[0:0] == 1'b1) ? Range1_all_zeros_2_fu_1420_p2 : Range1_all_ones_2_fu_1414_p2);

assign select_ln778_3_fu_1558_p3 = ((tmp_21_fu_1522_p3[0:0] == 1'b1) ? Range1_all_zeros_3_fu_1552_p2 : Range1_all_ones_3_fu_1546_p2);

assign select_ln778_4_fu_1690_p3 = ((tmp_25_fu_1654_p3[0:0] == 1'b1) ? Range1_all_zeros_4_fu_1684_p2 : Range1_all_ones_4_fu_1678_p2);

assign select_ln778_5_fu_1822_p3 = ((tmp_29_fu_1786_p3[0:0] == 1'b1) ? Range1_all_zeros_5_fu_1816_p2 : Range1_all_ones_5_fu_1810_p2);

assign select_ln778_fu_1140_p3 = ((tmp_9_fu_1104_p3[0:0] == 1'b1) ? Range1_all_zeros_fu_1134_p2 : Range1_all_ones_fu_1128_p2);

assign sext_ln1118_1_fu_368_p1 = $signed(c1_c2_read_reg_1948);

assign sext_ln1118_2_fu_384_p1 = $signed(c1_c3_read_reg_1953);

assign sext_ln1118_3_fu_401_p1 = $signed(c2_c1_read_reg_1968);

assign sext_ln1118_4_fu_414_p1 = $signed(c2_c2_read_reg_1973);

assign sext_ln1118_5_fu_427_p1 = $signed(c2_c3_read_reg_1978);

assign sext_ln1118_6_fu_444_p1 = $signed(c3_c1_read_reg_1993);

assign sext_ln1118_7_fu_457_p1 = $signed(c3_c2_read_reg_1998);

assign sext_ln1118_8_fu_470_p1 = $signed(c3_c3_read_reg_2003);

assign sext_ln1118_fu_352_p1 = $signed(c1_c1_read_reg_1943);

assign sext_ln1192_1_fu_1213_p1 = $signed(rhs_7_fu_1206_p3);

assign sext_ln1192_2_fu_1356_p1 = $signed(rhs_11_fu_1349_p3);

assign sext_ln1192_fu_1070_p1 = $signed(rhs_3_fu_1063_p3);

assign sext_ln703_10_fu_1337_p1 = $signed(ret_V_6_reg_2282);

assign sext_ln703_11_fu_1340_p1 = r_V_14_reg_2108_pp0_iter3_reg;

assign sext_ln703_12_fu_835_p1 = r_V_15_reg_2123;

assign sext_ln703_13_fu_838_p1 = r_V_16_reg_2133;

assign sext_ln703_14_fu_1480_p1 = $signed(ret_V_9_reg_2309);

assign sext_ln703_15_fu_1483_p1 = r_V_17_reg_2143_pp0_iter3_reg;

assign sext_ln703_16_fu_907_p1 = r_V_18_reg_2158;

assign sext_ln703_17_fu_910_p1 = r_V_19_reg_2168;

assign sext_ln703_18_fu_1612_p1 = $signed(ret_V_12_reg_2336);

assign sext_ln703_19_fu_1615_p1 = r_V_20_reg_2178_pp0_iter3_reg;

assign sext_ln703_1_fu_601_p1 = r_V_7_reg_2028;

assign sext_ln703_20_fu_979_p1 = r_V_21_reg_2193;

assign sext_ln703_21_fu_982_p1 = r_V_22_reg_2203;

assign sext_ln703_22_fu_1744_p1 = $signed(ret_V_15_reg_2363);

assign sext_ln703_23_fu_1747_p1 = r_V_23_reg_2213_pp0_iter3_reg;

assign sext_ln703_2_fu_1051_p1 = $signed(ret_V_reg_2228);

assign sext_ln703_3_fu_1054_p1 = r_V_8_reg_2038_pp0_iter3_reg;

assign sext_ln703_4_fu_677_p1 = r_V_9_reg_2053;

assign sext_ln703_5_fu_680_p1 = r_V_10_reg_2063;

assign sext_ln703_6_fu_1194_p1 = $signed(ret_V_3_reg_2255);

assign sext_ln703_7_fu_1197_p1 = r_V_11_reg_2073_pp0_iter3_reg;

assign sext_ln703_8_fu_756_p1 = r_V_12_reg_2088;

assign sext_ln703_9_fu_759_p1 = r_V_13_reg_2098;

assign sext_ln703_fu_598_p1 = r_V_reg_2018;

assign stream_in_48_TREADY = regslice_both_stream_in_48_V_data_V_U_ack_in;

assign stream_out_48_TDATA_int_regslice = {{{{{{out6_V_fu_1868_p3}, {out5_V_fu_1736_p3}}, {out4_V_fu_1604_p3}}, {out3_V_fu_1472_p3}}, {out2_V_fu_1329_p3}}, {out1_V_fu_1186_p3}};

assign stream_out_48_TVALID = regslice_both_stream_out_48_V_data_V_U_vld_out;

assign tmp_13_fu_1247_p3 = p_Val2_6_fu_1237_p2[32'd7];

assign tmp_17_fu_1390_p3 = p_Val2_9_fu_1380_p2[32'd7];

assign tmp_1_fu_1118_p4 = {{ret_V_2_fu_1074_p2[19:16]}};

assign tmp_21_fu_1522_p3 = p_Val2_12_fu_1512_p2[32'd7];

assign tmp_25_fu_1654_p3 = p_Val2_15_fu_1644_p2[32'd7];

assign tmp_29_fu_1786_p3 = p_Val2_18_fu_1776_p2[32'd7];

assign tmp_2_fu_1404_p4 = {{ret_V_8_fu_1360_p2[19:16]}};

assign tmp_3_fu_1536_p4 = {{ret_V_11_fu_1492_p2[19:16]}};

assign tmp_4_fu_1668_p4 = {{ret_V_14_fu_1624_p2[19:16]}};

assign tmp_5_fu_1800_p4 = {{ret_V_17_fu_1756_p2[19:16]}};

assign tmp_9_fu_1104_p3 = p_Val2_3_fu_1094_p2[32'd7];

assign tmp_fu_1261_p4 = {{ret_V_5_fu_1217_p2[19:16]}};

assign trunc_ln1115_10_fu_570_p1 = r_V_21_fu_564_p2[15:0];

assign trunc_ln1115_11_fu_580_p1 = r_V_22_fu_574_p2[15:0];

assign trunc_ln1115_1_fu_377_p1 = r_V_7_fu_371_p2[15:0];

assign trunc_ln1115_2_fu_410_p1 = r_V_9_fu_404_p2[15:0];

assign trunc_ln1115_3_fu_423_p1 = r_V_10_fu_417_p2[15:0];

assign trunc_ln1115_4_fu_453_p1 = r_V_12_fu_447_p2[15:0];

assign trunc_ln1115_5_fu_466_p1 = r_V_13_fu_460_p2[15:0];

assign trunc_ln1115_6_fu_496_p1 = r_V_15_fu_490_p2[15:0];

assign trunc_ln1115_7_fu_509_p1 = r_V_16_fu_503_p2[15:0];

assign trunc_ln1115_8_fu_536_p1 = r_V_18_fu_530_p2[15:0];

assign trunc_ln1115_9_fu_546_p1 = r_V_19_fu_540_p2[15:0];

assign trunc_ln1115_fu_361_p1 = r_V_fu_355_p2[15:0];

assign trunc_ln1192_10_fu_479_p1 = r_V_14_fu_473_p2[7:0];

assign trunc_ln1192_11_fu_772_p1 = add_ln1192_17_fu_762_p2[7:0];

assign trunc_ln1192_12_fu_483_p1 = r_V_14_fu_473_p2[15:0];

assign trunc_ln1192_14_fu_345_p1 = bias_c3_0_data_reg[7:0];

assign trunc_ln1192_15_fu_522_p1 = r_V_17_fu_516_p2[7:0];

assign trunc_ln1192_16_fu_851_p1 = add_ln1192_25_fu_841_p2[7:0];

assign trunc_ln1192_17_fu_526_p1 = r_V_17_fu_516_p2[15:0];

assign trunc_ln1192_18_fu_556_p1 = r_V_20_fu_550_p2[7:0];

assign trunc_ln1192_19_fu_923_p1 = add_ln1192_34_fu_913_p2[7:0];

assign trunc_ln1192_1_fu_614_p1 = add_ln1192_1_fu_604_p2[7:0];

assign trunc_ln1192_20_fu_560_p1 = r_V_20_fu_550_p2[15:0];

assign trunc_ln1192_21_fu_590_p1 = r_V_23_fu_584_p2[7:0];

assign trunc_ln1192_22_fu_995_p1 = add_ln1192_38_fu_985_p2[7:0];

assign trunc_ln1192_23_fu_594_p1 = r_V_23_fu_584_p2[15:0];

assign trunc_ln1192_2_fu_397_p1 = r_V_8_fu_387_p2[15:0];

assign trunc_ln1192_3_fu_337_p1 = bias_c1_0_data_reg[7:0];

assign trunc_ln1192_4_fu_623_p3 = {{trunc_ln1192_3_reg_1963_pp0_iter2_reg}, {8'd0}};

assign trunc_ln1192_5_fu_436_p1 = r_V_11_fu_430_p2[7:0];

assign trunc_ln1192_6_fu_693_p1 = add_ln1192_10_fu_683_p2[7:0];

assign trunc_ln1192_7_fu_440_p1 = r_V_11_fu_430_p2[15:0];

assign trunc_ln1192_8_fu_341_p1 = bias_c2_0_data_reg[7:0];

assign trunc_ln1192_9_fu_702_p3 = {{trunc_ln1192_8_reg_1988_pp0_iter2_reg}, {8'd0}};

assign trunc_ln1192_fu_393_p1 = r_V_8_fu_387_p2[7:0];

assign trunc_ln1192_s_fu_781_p3 = {{trunc_ln1192_14_reg_2013_pp0_iter2_reg}, {8'd0}};

assign v_p1_V_fu_283_p1 = stream_in_48_TDATA_int_regslice[7:0];

assign zext_ln1118_1_fu_365_p1 = v_p2_V_reg_1918_pp0_iter1_reg;

assign zext_ln1118_2_fu_381_p1 = v_p3_V_reg_1923_pp0_iter1_reg;

assign zext_ln1118_3_fu_487_p1 = v_p4_V_reg_1928_pp0_iter1_reg;

assign zext_ln1118_4_fu_500_p1 = v_p5_V_reg_1933_pp0_iter1_reg;

assign zext_ln1118_5_fu_513_p1 = v_p6_V_reg_1938_pp0_iter1_reg;

assign zext_ln1118_fu_349_p1 = v_p1_V_reg_1913_pp0_iter1_reg;

assign zext_ln394_1_fu_1317_p1 = select_ln396_1_fu_1309_p3;

assign zext_ln394_2_fu_1460_p1 = select_ln396_2_fu_1452_p3;

assign zext_ln394_3_fu_1592_p1 = select_ln396_3_fu_1584_p3;

assign zext_ln394_4_fu_1724_p1 = select_ln396_4_fu_1716_p3;

assign zext_ln394_5_fu_1856_p1 = select_ln396_5_fu_1848_p3;

assign zext_ln394_fu_1174_p1 = select_ln396_fu_1166_p3;

assign zext_ln415_10_fu_1770_p1 = tmp_28_reg_2379;

assign zext_ln415_11_fu_1773_p1 = tmp_28_reg_2379;

assign zext_ln415_1_fu_1091_p1 = tmp_8_reg_2244;

assign zext_ln415_2_fu_1231_p1 = tmp_12_reg_2271;

assign zext_ln415_3_fu_1234_p1 = tmp_12_reg_2271;

assign zext_ln415_4_fu_1374_p1 = tmp_16_reg_2298;

assign zext_ln415_5_fu_1377_p1 = tmp_16_reg_2298;

assign zext_ln415_6_fu_1506_p1 = tmp_20_reg_2325;

assign zext_ln415_7_fu_1509_p1 = tmp_20_reg_2325;

assign zext_ln415_8_fu_1638_p1 = tmp_24_reg_2352;

assign zext_ln415_9_fu_1641_p1 = tmp_24_reg_2352;

assign zext_ln415_fu_1088_p1 = tmp_8_reg_2244;

endmodule //color_convert_2
